//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: rpc/user.proto

package practice.cafe.user.rpc;

@kotlin.jvm.JvmSynthetic
public inline fun getCafeUserReq(block: practice.cafe.user.rpc.GetCafeUserReqKt.Dsl.() -> kotlin.Unit): practice.cafe.user.rpc.GetCafeUserReq =
  practice.cafe.user.rpc.GetCafeUserReqKt.Dsl._create(practice.cafe.user.rpc.GetCafeUserReq.newBuilder()).apply { block() }._build()
public object GetCafeUserReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: practice.cafe.user.rpc.GetCafeUserReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: practice.cafe.user.rpc.GetCafeUserReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): practice.cafe.user.rpc.GetCafeUserReq = _builder.build()

    /**
     * <code>int64 user_id = 1;</code>
     */
    public var userId: kotlin.Long
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <code>int64 user_id = 1;</code>
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun practice.cafe.user.rpc.GetCafeUserReq.copy(block: practice.cafe.user.rpc.GetCafeUserReqKt.Dsl.() -> kotlin.Unit): practice.cafe.user.rpc.GetCafeUserReq =
  practice.cafe.user.rpc.GetCafeUserReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()
