//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: rpc/user.proto

package practice.cafe.user.rpc;

@kotlin.jvm.JvmSynthetic
public inline fun listCafeUsersReq(block: practice.cafe.user.rpc.ListCafeUsersReqKt.Dsl.() -> kotlin.Unit): practice.cafe.user.rpc.ListCafeUsersReq =
  practice.cafe.user.rpc.ListCafeUsersReqKt.Dsl._create(practice.cafe.user.rpc.ListCafeUsersReq.newBuilder()).apply { block() }._build()
public object ListCafeUsersReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: practice.cafe.user.rpc.ListCafeUsersReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: practice.cafe.user.rpc.ListCafeUsersReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): practice.cafe.user.rpc.ListCafeUsersReq = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class UserIdsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated int64 user_ids = 1;</code>
     */
     public val userIds: com.google.protobuf.kotlin.DslList<kotlin.Long, UserIdsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getUserIdsList()
      )
    /**
     * <code>repeated int64 user_ids = 1;</code>
     * @param value The userIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addUserIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, UserIdsProxy>.add(value: kotlin.Long) {
      _builder.addUserIds(value)
    }/**
     * <code>repeated int64 user_ids = 1;</code>
     * @param value The userIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignUserIds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, UserIdsProxy>.plusAssign(value: kotlin.Long) {
      add(value)
    }/**
     * <code>repeated int64 user_ids = 1;</code>
     * @param values The userIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllUserIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, UserIdsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Long>) {
      _builder.addAllUserIds(values)
    }/**
     * <code>repeated int64 user_ids = 1;</code>
     * @param values The userIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllUserIds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, UserIdsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Long>) {
      addAll(values)
    }/**
     * <code>repeated int64 user_ids = 1;</code>
     * @param index The index to set the value at.
     * @param value The userIds to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setUserIds")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, UserIdsProxy>.set(index: kotlin.Int, value: kotlin.Long) {
      _builder.setUserIds(index, value)
    }/**
     * <code>repeated int64 user_ids = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearUserIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, UserIdsProxy>.clear() {
      _builder.clearUserIds()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun practice.cafe.user.rpc.ListCafeUsersReq.copy(block: practice.cafe.user.rpc.ListCafeUsersReqKt.Dsl.() -> kotlin.Unit): practice.cafe.user.rpc.ListCafeUsersReq =
  practice.cafe.user.rpc.ListCafeUsersReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()
